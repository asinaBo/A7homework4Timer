import kotlinx.coroutines.*
import kotlin.system.measureTimeMillis

fun main() {
    runBlocking {
        // Секундомер
        val stopwatchJob = launch {
            for (i in 1..60) { // Запустим секундомер на 60 секунд
                delay(1000) // Подождем 1 секунду
                println("Секундомер: $i секунд")
            }
        }

        // Таймер
        val timerJob = launch {
            val timeToWait = 5000L // 5 секунд
            delay(timeToWait)
            println("Время истекло! $timeToWait миллисекунд прошло.")
        }

        stopwatchJob.join() // Дождемся завершения секундомера
        timerJob.join() // Дождемся завершения таймера
    }
}
Этот код создает две корутины: одна для секундомера, которая считает секунды, и другая для таймера, который выводит сообщение после заданного времени. Обратите внимание, что код запущен в блоке runBlocking, чтобы дождаться завершения всех корутин.

Вы можете настроить продолжительность секундомера и временной интервал для таймера, изменяя значения внутри кода.





